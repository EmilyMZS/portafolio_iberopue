{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"comandos/","title":"Encabezados","text":"<pre><code># T\u00edtulo H1\n## T\u00edtulo H2\n### T\u00edtulo H3\n</code></pre>"},{"location":"comandos/#titulo-h1","title":"T\u00edtulo H1","text":""},{"location":"comandos/#titulo-h2","title":"T\u00edtulo H2","text":""},{"location":"comandos/#titulo-h3","title":"T\u00edtulo H3","text":""},{"location":"comandos/#enfasis-y-codigo-en-linea","title":"\u00c9nfasis y c\u00f3digo en l\u00ednea","text":"<pre><code>**negritas**, *cursivas*, ~~tachado~~, `c\u00f3digo en l\u00ednea`\n</code></pre> <p>negritas, cursivas, ~~tachado~~, <code>c\u00f3digo en l\u00ednea</code></p>"},{"location":"comandos/#citas-blockquote","title":"Citas (blockquote)","text":"<pre><code>&gt; Esta es una cita destacada.\n&gt; Puede tener m\u00faltiples l\u00edneas.\n</code></pre> <p>Esta es una cita destacada. Puede tener m\u00faltiples l\u00edneas.</p>"},{"location":"comandos/#enlaces","title":"Enlaces","text":"<pre><code>[Enlace directo](https://www.iberopuebla.mx/)\n\n[Texto del enlace de referencia][doc-ref]\n\n[doc-ref]: https://www.iberopuebla.mx//docs \"T\u00edtulo opcional\"\n</code></pre> <p>Enlace directo</p> <p>Texto del enlace de referencia</p>"},{"location":"comandos/#listas-vinetas-numeradas-y-de-tareas","title":"Listas: vi\u00f1etas, numeradas y de tareas","text":"<pre><code>- Item A\n    * Subitem A.1\n    * Subitem A.2\n- Item B\n    - Subitem B.1\n    - Subitem B.2\n\n1.  Paso 1\n    1.  Paso 1.1\n    2.  Paso 1.2\n        1.  Paso 1.2.1\n        2.  Paso 1.2.2\n\n- [x] Hecho\n- [ ] Pendiente\n</code></pre> <ul> <li>Item A<ul> <li>Subitem A.1</li> <li>Subitem A.2</li> </ul> </li> <li>Item B<ul> <li>Subitem B.1</li> <li>Subitem B.2</li> </ul> </li> </ul> <ol> <li> <p>Paso 1</p> <ol> <li>Paso 1.1</li> <li>Paso 1.2<ol> <li>Paso 1.2.1</li> <li>Paso 1.2.2</li> </ol> </li> </ol> </li> <li> <p> Hecho</p> </li> <li> Pendiente</li> </ol>"},{"location":"comandos/#tablas","title":"Tablas","text":"<pre><code>| Componente | Cant. | Nota        |\n|-----------:|:-----:|-------------|\n| Sensor X   | 2     | I2C         |\n| MCU Y      | 1     | WiFi/BLE    |\n</code></pre> Componente Cant. Nota Sensor X 2 I2C MCU Y 1 WiFi/BLE"},{"location":"comandos/#imagenes","title":"Im\u00e1genes","text":"<pre><code>![Diagrama del sistema](recursos/imgs/ibero.jpeg)\n\n&lt;!-- Control de tama\u00f1o usando HTML (cuando se requiera) --&gt;\n&lt;img src=\"../recursos/imgs/ibero.jpeg\" alt=\"Diagrama del sistema\" width=\"420\"&gt;\n</code></pre>"},{"location":"comandos/#pdfs-enlace-y-embebido","title":"PDFs (enlace y embebido)","text":"<pre><code>[Descargar especificaci\u00f3n (PDF)](recursos/archivos/Calendario.pdf)\n\n&lt;!-- Embed (requiere navegador compatible) --&gt;\n&lt;object data=\"recursos/archivos/Calendario.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600\"&gt;\n  &lt;p&gt;No se pudo mostrar el PDF. &lt;a href=\"../recursos/archivos/Calendario.pdf\"&gt;Descargar&lt;/a&gt;&lt;/p&gt;\n&lt;/object&gt;\n</code></pre> <p>Descargar especificaci\u00f3n (PDF)</p>"},{"location":"comandos/#admonitions-material","title":"Admonitions (Material)","text":"<pre><code>!!! note \"Nota\"\n    Esto es una nota informativa.\n\n!!! tip \"Sugerencia\"\n    Un consejo breve para el usuario.\n\n!!! warning \"Advertencia\"\n    Precauciones o riesgos a considerar.\n\n??? info \"M\u00e1s informaci\u00f3n (colapsable)\"\n    Contenido adicional que se puede expandir.\n</code></pre> <p>Nota</p> <p>Esto es una nota informativa.</p> <p>Sugerencia</p> <p>Un consejo breve para el usuario.</p> <p>Advertencia</p> <p>Precauciones o riesgos a considerar.</p> M\u00e1s informaci\u00f3n (colapsable) <p>Contenido adicional que se puede expandir.</p>"},{"location":"comandos/#codigo-con-resaltado","title":"C\u00f3digo con resaltado","text":"<p><pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre> <pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre></p>"},{"location":"comandos/#separador-horizontal","title":"Separador horizontal","text":"<pre><code>---\n</code></pre>"},{"location":"comandos/#listas-anidadas-con-codigo-y-notas","title":"Listas anidadas con c\u00f3digo y notas","text":"<pre><code>- **M\u00f3dulo A**\n  - Funci\u00f3n: `procesar()`\n  - Entrada:\n    - `signal` (float)\n    - `freq` (Hz)\n  - Salida:\n    - JSON con `valor`, `unidad`\n  - !!! note\n        Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> <ul> <li>M\u00f3dulo A</li> <li>Funci\u00f3n: <code>procesar()</code></li> <li>Entrada:<ul> <li><code>signal</code> (float)</li> <li><code>freq</code> (Hz)</li> </ul> </li> <li>Salida:<ul> <li>JSON con <code>valor</code>, <code>unidad</code></li> </ul> </li> <li> <p>Note</p> <pre><code>Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> </li> </ul>"},{"location":"comandos/#bloques-de-cita-con-codigo-pseudo-logs","title":"Bloques de cita con c\u00f3digo (pseudo-logs)","text":"<pre><code>&gt; **Log:**\n&gt; ```\n&gt; [12:00:00] Init OK\n&gt; [12:00:01] Conectando a I2C...\n&gt; [12:00:02] Lectura: 523 mV\n&gt; ```\n</code></pre> <p>Log: <pre><code>[12:00:00] Init OK\n[12:00:01] Conectando a I2C...\n[12:00:02] Lectura: 523 mV\n</code></pre></p>"},{"location":"inicio/","title":"Inicio","text":"<p>Nombre: Emily Mendez</p> <p>Edad: 18 a\u00f1os</p> <p>Carrera: Ingerier\u00eda Mecatr\u00f3nica, enfoque en rob\u00f3tica (ojal\u00e1)</p> <p>Info de contacto:</p> <ul> <li> <p>N\u00famero: 2214287095</p> </li> <li> <p>Correo: 203070@iberopuebla.mx</p> </li> </ul> <p>Gustos: M\u00fasica (Arctic monkeys, Hozier, TV Girl), Tocar guitarra, Leer, Viajar, Jugar Videojuegos, DC Comics, Talachearle.</p> <p>Habilidades: Organizaci\u00f3n, Resoluci\u00f3n de problemas, Trabajo constante y bajo presi\u00f3n, Puntualidad, etc.</p> <p>Achievements: Obtenci\u00f3n de Beca Ada Byron en IBERO Puebla, Participaci\u00f3n en Expociencias 2024, Acreditadora Diploma IB, etc.</p> <p></p>"},{"location":"Primer%20Semestre/Actuadores/","title":"Actuadores Introducci\u00f3n","text":"<p>Los actuadores son dispositivos electr\u00f3nicos y electromec\u00e1nicos que convierten energ\u00eda en movimiento o fuerza. Estos son muy \u00fatiles en t\u00e9rminos de automatizaci\u00f3n de proyectos.</p> <p>En el caso de lo que se aprendi\u00f3 a usar, se utilizaron mayormente motores DC y al final servomotores.</p> <p>Algo muy importante de este tipo de motores es que funcionan con un cierto voltaje (12 V el DC y 5 V los servo) y que tienen una caracter\u00edstica conocida como PWM.</p> <p>El PWM (Modulaci\u00f3n por Ancho de Pulsos) es un control de la energ\u00eda que un motor usa, o en general una gran cantidad de dispositivos de corriente continua. En el caso de los motores, la regulaci\u00f3n de la energ\u00eda permite un mejor control sobre el funcionamiento y la velocidad con la que gira o se mueve el motor. Al variar el ciclo de trabajo (el porcentaje de tiempo que la se\u00f1al est\u00e1 encendida), se puede controlar la velocidad y el comportamiento del motor de forma eficiente.</p> <p>Tambi\u00e9n es importante saber qu\u00e9 es la resoluci\u00f3n, la cual se define como la precisi\u00f3n con la que se puede controlar la velocidad o posici\u00f3n del motor. Este funciona con bits, y por ejemplo, si al motor se le programa con 12 bits, significa que el motor tendr\u00e1 de 0 a 4096. Esto representa que el motor puede tener 4096 diferentes niveles en los que se mueva.</p> <p>La diferencia principal entre PWM y resoluci\u00f3n es que PWM es un control enfocado a la energ\u00eda, y la resoluci\u00f3n es un control al mecanismo. El PWM controla cu\u00e1nta energ\u00eda recibe el motor, y la resoluci\u00f3n, qu\u00e9 tan fino es el control del motor.</p> <p>Podemos decir que la resoluci\u00f3n define cu\u00e1ntos niveles puede tener el PWM, y el PWM determina cu\u00e1nta energ\u00eda se entrega en cada nivel.</p>"},{"location":"Primer%20Semestre/Actuadores/#puente-h","title":"Puente H","text":"<p>El puente H es un circuito que se utiliza para regular energ\u00eda y controlar el funcionamiento de motores DC. Tiene las conexiones de IN1 a las permitidas por el puente H, y estas se utilizan para conectar las polaridades de uno o m\u00e1s motores. Junto a esto, el puente se alimenta con m\u00ednimo 5 V y tiene pins out para conectarlos a un microcontrolador o a una protoboard.</p> <p></p>"},{"location":"Primer%20Semestre/Actuadores/#motor-dc","title":"Motor DC","text":"<p>Con el motor DC nos enfocamos durante la pr\u00e1ctica a poder hacerlo girar de un lado a otro, y luego escalarlo para que luego regresara al 0.</p> <pre><code>/*Control de 1 solo motor*/\n\ndefine in1 27\n\ndefine in2 14\n\n\nvoid setup() {\n\n  pinMode(in1, OUTPUT);\n\n  pinMode(in2, OUTPUT);\n\n}\n\n\nvoid loop() {\n\n\n  /*ADELANTE*/\n\n  digitalWrite(in1, 0);\n\n  digitalWrite(in2, 1);\n\n  delay(1000);\n\n\n  /*ALTO*/\n\n  digitalWrite(in1, 0);\n\n  digitalWrite(in2, 0);\n\n  delay(1000);\n\n\n  /*ATRAS*/\n\n  digitalWrite(in1, 1);\n\n  digitalWrite(in2, 0);\n\n  delay(1000);\n\n\n  /*ALTO*/\n\n  digitalWrite(in1, 0);\n\n  digitalWrite(in2, 0);\n\n  delay(1000);\n\n}\n</code></pre> <p>Con el c\u00f3digo anterior, el motor va a toda velocidad, pero para controlar esta velocidad con el PWM se hace:</p> <pre><code>- #define PWM 12 // pin de velocidad\n- En voidSetup:\nledcAttachChannel(pwm, 1000, 8, 0); \n</code></pre> <p>-ledcAttachChannel= comando del ESP32</p> <p>pwm=pin=12</p> <p>1000 = frecuencia</p> <p>8 = resoluci\u00f3n = (2^8 = 225. Resoluci\u00f3n de 0-225)</p> <p>0 = constante. Siempre debe ser 0. Este c\u00f3digo b\u00e1sicamente nos est\u00e1 mostrando que in1 es una direcci\u00f3n de giro e in2 es otra. Cuando in1 est\u00e9 activo, va a girar para delante, e in2 debe estar en 0. Para que vaya en reversa, debe ser viceversa.</p> <p>El c\u00f3digo completo con PWM queda as\u00ed:</p> <p></p> <p></p>"},{"location":"Primer%20Semestre/Actuadores/#servomotor","title":"Servomotor","text":"<p>A diferencia del motor DC, el servomotor siempre debe tener un PWM, y funciona con \u00e1ngulos, generando movimientos m\u00e1s controlados y eficaces cuando se necesitan movimientos concretos.</p> <p></p> <p></p>"},{"location":"Primer%20Semestre/Actuadores/#evidencias","title":"Evidencias","text":"<p>https://youtube.com/shorts/H03ZWURkvD8?feature=share</p> <p></p> <p></p>"},{"location":"Primer%20Semestre/Conexiones%20ESP32/","title":"ESP Introducci\u00f3n","text":"<p>El ESP32 es un conjunto de minicontroladores que permite el control y ejecuci\u00f3n de proyectos con una conexi\u00f3n Bluetooth y WI-FI.</p> <p>Como tal, este es muy similar a un Arduino, pudi\u00e9ndose programar con el mismo bloc de notas, pero este tiene la ventaja de que tiene muchos m\u00e1s pines para mejor procesamiento, la creaci\u00f3n de proyectos m\u00e1s grandes si es necesario y, como anteriormente mencionado, la opci\u00f3n de poder controlarlo de manera Bluetooth.</p> <p></p>"},{"location":"Primer%20Semestre/Conexiones%20ESP32/#proyecto-1","title":"Proyecto 1","text":"<p>El primer uso que le dimos al ESP fue en un proyecto, el cual se enfoc\u00f3 en poder usar delays para encender y apagar un led.</p> <p></p>"},{"location":"Primer%20Semestre/Conexiones%20ESP32/#proyecto-2","title":"Proyecto 2","text":"<p>El segundo uso de la ESP consisti\u00f3 en ahora a\u00f1adirle botones al c\u00f3digo previamente utilizado. Cuando el bot\u00f3n fuera presionado, el LED encender\u00eda, y cuando este no est\u00e9 presionado, debe permanecer apagado.</p> <p></p>"},{"location":"Primer%20Semestre/Conexiones%20ESP32/#proyecto-3","title":"Proyecto 3","text":"<p>El tercer uso del LED consisti\u00f3 en poder encender el LED por medio de la conexi\u00f3n Bluetooth del ESP, generando un c\u00f3digo que lea el INPUT del mensaje por Bluetooth del celular al ESP, los cuales est\u00e1n conectados por esta v\u00eda inal\u00e1mbrica. Cuando el ESP recibiera un 1, el led deber\u00eda encender, y cuando reciba un 0, se apaga.</p> <p></p>"},{"location":"Primer%20Semestre/Conexiones%20ESP32/#evidencias","title":"Evidencias","text":"<ol> <li> <p>https://youtube.com/shorts/S92fErVGLRo?feature=share</p> </li> <li> <p>https://youtube.com/shorts/ofZKnvaHk9Y?feature=share</p> </li> <li> <p>https://youtube.com/shorts/QJc2S6VjcBQ?feature=share</p> </li> </ol>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/","title":"Proyecto Carritos","text":""},{"location":"Primer%20Semestre/Proyecto%20Carritos/#1-resumen","title":"1) Resumen","text":"<ul> <li>Nombre del proyecto: Carritos con motores DC </li> <li>Equipo / Autor(es): Emily Mendez, Aldo Fernandez, Alexandra Groot, Valeria Pi\u00f1a, Arturo Mart\u00ednez, Sebastian Rodr\u00edguez, Erik Zepeda </li> <li>Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica </li> <li>Fecha: 15/10/2025 </li> <li>Descripci\u00f3n breve: Desarrollo de un carrito a control remoto con bases de motores DC, puente H, ESP32, Control Bluetooth, etc.</li> </ul>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#2-objetivos","title":"2) Objetivos","text":"<p>General: </p> <p>Aplicar los conocimientos vistos en clase para dise\u00f1ar y construir un coche a control remoto que pueda competir con los de otros equipos..</p> <p>Espec\u00edficos:</p> <ul> <li> <p>Hacer un sistema que permita mover el coche de forma r\u00e1pida y controlada para atrapar una pelota y anotar goles.</p> </li> <li> <p>Lograr meter m\u00e1s goles que el equipo contrario durante la competencia.</p> </li> </ul>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<ul> <li>Incluye: Dise\u00f1ar y construir un coche con materiales propios, con un sistema de movimiento din\u00e1mico y control remoto por Bluetooth, en un tiempo de alrededor de dos semanas.</li> </ul>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#4-planeacion","title":"4) Planeaci\u00f3n","text":"<p>Para comenzar el proyecto, el equipo se dividi\u00f3 en tareas. Dos integrantes se encargaron del dise\u00f1o del coche, y los dem\u00e1s trabajaron en la parte electr\u00f3nica y de programaci\u00f3n. As\u00ed se pudo avanzar de manera m\u00e1s r\u00e1pida y organizada.</p> <p>La lista de materiales que usamos fue la siguiente:</p> <ul> <li> <p>Puente H</p> </li> <li> <p>Dos motores DC</p> </li> <li> <p>Protoboard</p> </li> <li> <p>Microcontrolador ESP32</p> </li> <li> <p>Jumpers</p> </li> <li> <p>Luces LED</p> </li> <li> <p>Pila de 9V</p> </li> </ul> <p>Tambi\u00e9n se utiliz\u00f3 MDF para construir la estructura del coche y PLA para imprimir en 3D una pala que sirviera para empujar la pelota hacia la porter\u00eda del otro equipo.</p>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#5-desarrollo","title":"5) Desarrollo","text":""},{"location":"Primer%20Semestre/Proyecto%20Carritos/#electronica","title":"Electr\u00f3nica","text":"<p>Primero, se conectaron los motores a las bases hechas de MDF y luego al puente H. Se revis\u00f3 que la corriente y la conexi\u00f3n a tierra estuvieran bien.</p> <p>Los pines IN1, IN2, IN3 e IN4 se conectaron para que los motores pudieran girar hacia adelante y hacia atr\u00e1s seg\u00fan fuera necesario.</p> <p>Despu\u00e9s, se conect\u00f3 la ESP32, revisando las hojas de datos y cuidando que no hubiera cortos. Los pines usados se definieron m\u00e1s tarde en el c\u00f3digo de programaci\u00f3n.</p>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#programacion","title":"Programaci\u00f3n","text":"<p>Con las conexiones listas, se desarroll\u00f3 un c\u00f3digo para controlar el coche desde un celular mediante Bluetooth.</p> <p>Se crearon varias funciones: una para avanzar, otra para retroceder, una para girar a la derecha, otra a la izquierda y una m\u00e1s para detener el coche.</p> <p>Para controlar la velocidad y los giros se utiliz\u00f3 PWM (modulaci\u00f3n por ancho de pulso). Por ejemplo:</p> <ul> <li> <p>Si gira a la izquierda, la llanta derecha se detiene y la izquierda sigue girando.</p> </li> <li> <p>Si gira a la derecha, se hace lo contrario.</p> </li> <li> <p>Para avanzar, ambas llantas giran a la misma velocidad.</p> </li> <li> <p>Para detenerse, las dos se apagan.</p> </li> </ul> <p>Tambi\u00e9n se agreg\u00f3 una funci\u00f3n que permite cambiar la velocidad del coche dependiendo del n\u00famero que se env\u00ede desde la aplicaci\u00f3n Bluetooth.</p> <pre><code>#include \"BluetoothSerial.h\"\n\nBluetoothSerial SerialBT;\n\n\n// Pines del puente H\n\nconst int IN1 = 12; // Motor izquierdo\n\nconst int IN2 = 11;\n\nconst int ENA = 13;\n\nconst int IN3 = 10; // Motor derecho\n\nconst int IN4 = 9;\n\nconst int ENB = 7;\n\nint valSpeed = 255;\n\n\nvoid setup() {\n\n  Serial.begin(115200);\n\n  SerialBT.begin(\"CarroESP32\"); // Nombre del dispositivo Bluetooth\n\n  pinMode(IN1, OUTPUT);\n\n  pinMode(IN2, OUTPUT);\n\n  pinMode(ENA, OUTPUT);\n\n  pinMode(IN3, OUTPUT);\n\n  pinMode(IN4, OUTPUT);\n\n  pinMode(ENB, OUTPUT);\n\n  stopMotors();\n\n}\n\n\nvoid loop() {\n\n  if (SerialBT.available()) {\n\n    char command = SerialBT.read();\n\n    Serial.println(command);\n\n    switch (command) {\n\n      case 'F': forward(); break;\n\n      case 'B': backward(); break;\n\n      case 'L': turnLeft(); break;\n\n      case 'R': turnRight(); break;\n\n      case 'S': stopMotors(); break;\n\n      case '0': setSpeed(0); break;\n\n      case '1': setSpeed(25); break;\n\n      case '2': setSpeed(50); break;\n\n      case '3': setSpeed(75); break;\n\n      case '4': setSpeed(100); break;\n\n      case '5': setSpeed(125); break;\n\n      case '6': setSpeed(150); break;\n\n      case '7': setSpeed(175); break;\n\n      case '8': setSpeed(200); break;\n\n      case '9': setSpeed(255); break;\n\n    }\n\n  }\n\n}\n\n\nvoid forward() {\n\n  analogWrite(ENA, valSpeed);\n\n  analogWrite(ENB, valSpeed);\n\n  digitalWrite(IN1, HIGH);\n\n  digitalWrite(IN2, LOW);\n\n  digitalWrite(IN3, HIGH);\n\n  digitalWrite(IN4, LOW);\n\n}\n\n\nvoid backward() {\n\n  analogWrite(ENA, valSpeed);\n\n  analogWrite(ENB, valSpeed);\n\n  digitalWrite(IN1, LOW);\n\n  digitalWrite(IN2, HIGH);\n\n  digitalWrite(IN3, LOW);\n\n  digitalWrite(IN4, HIGH);\n\n}\n\n\nvoid turnLeft() {\n\n  analogWrite(ENA, valSpeed / 2);\n\n  analogWrite(ENB, valSpeed);\n\n  digitalWrite(IN1, HIGH);\n\n  digitalWrite(IN2, LOW);\n\n  digitalWrite(IN3, HIGH);\n\n  digitalWrite(IN4, LOW);\n\n}\n\n\nvoid turnRight() {\n\n  analogWrite(ENA, valSpeed);\n\n  analogWrite(ENB, valSpeed / 2);\n\n  digitalWrite(IN1, HIGH);\n\n  digitalWrite(IN2, LOW);\n\n  digitalWrite(IN3, HIGH);\n\n  digitalWrite(IN4, LOW);\n\n}\n\n\nvoid stopMotors() {\n\n  analogWrite(ENA, 0);\n\n  analogWrite(ENB, 0);\n\n  digitalWrite(IN1, LOW);\n\n  digitalWrite(IN2, LOW);\n\n  digitalWrite(IN3, LOW);\n\n  digitalWrite(IN4, LOW);\n\n}\n\n\nvoid setSpeed(int val) {\n\n  valSpeed = val;\n\n}\n</code></pre>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#aplicacion","title":"Aplicaci\u00f3n","text":"<p>Para controlar el coche, se us\u00f3 una aplicaci\u00f3n desarrollada por un compa\u00f1ero. Esta app permite asignar letras a cada bot\u00f3n, que luego se env\u00edan por Bluetooth a la ESP32.</p> <p>Se configuraron as\u00ed:</p> <ul> <li> <p>F: Avanzar</p> </li> <li> <p>B: Retroceder</p> </li> <li> <p>L: Izquierda</p> </li> <li> <p>R: Derecha</p> </li> <li> <p>S: Detener</p> </li> </ul> <p>Cada vez que se presiona un bot\u00f3n, la aplicaci\u00f3n manda la letra y la ESP32 ejecuta la acci\u00f3n correspondiente.</p> <p></p> <p></p> <p></p>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#6-resultados-y-evidencias","title":"6) Resultados y Evidencias","text":"<p>Antes del concurso, el coche funcion\u00f3 correctamente: respond\u00eda bien a los comandos, las luces LED se encend\u00edan sin problema, la pala 3D encaj\u00f3 bien y el dise\u00f1o del coche fue atractivo.</p> <p>Durante la competencia, surgieron algunos problemas. Uno de los motores se cay\u00f3 cuando la pala se ator\u00f3 con una silla, y aunque se volvi\u00f3 a asegurar, volvi\u00f3 a soltarse en la segunda ronda. Adem\u00e1s, el control Bluetooth respond\u00eda con algo de retraso y los movimientos eran un poco bruscos.</p> <p>A pesar de eso, el funcionamiento general fue bueno. El coche cumpli\u00f3 con lo planeado, aunque no logr\u00f3 anotar goles ni obtener un lugar destacado.</p> <p>https://youtube.com/shorts/-BoEvhaO5zg?feature=share</p> <p>https://youtu.be/CgaybSU6_40</p>"},{"location":"Primer%20Semestre/Proyecto%20Carritos/#7-conclusiones","title":"7) Conclusiones","text":"<p>El proyecto y la competencia fueron una buena experiencia. La planeaci\u00f3n y ejecuci\u00f3n fueron adecuadas para el tiempo disponible. El coche funcion\u00f3 correctamente y cumpli\u00f3 con los objetivos del curso.</p> <p>Sin embargo, se detectaron algunas mejoras posibles:</p> <ul> <li> <p>Hacer m\u00e1s pruebas antes de la competencia.</p> </li> <li> <p>Asegurar mejor los motores.</p> </li> <li> <p>Practicar m\u00e1s con la aplicaci\u00f3n para mejorar el control.</p> </li> </ul> <p>En t\u00e9rminos generales, el proyecto permiti\u00f3 poner en pr\u00e1ctica los conocimientos adquiridos en la materia de Introducci\u00f3n a la Mecatr\u00f3nica. Adem\u00e1s, contribuy\u00f3 a comprender de manera m\u00e1s clara la integraci\u00f3n entre la electr\u00f3nica, la mec\u00e1nica y la programaci\u00f3n. Tambi\u00e9n evidenci\u00f3 que, para lograr un buen resultado, es necesario realizar numerosas pruebas y dedicar el tiempo suficiente para obtener un proyecto funcional y con el menor n\u00famero posible de fallas.</p>"}]}